x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- sub(" ", "", x)
x <- sub("\\.\\.+", ".", x)
x <- sub("*\\*+", NA, x)
grepl("\\<[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\>", as.character(x), ignore.case=TRUE)
}
valid_emails <- as.data.frame(isValidEmail(df$comlink_address))
isValidEmail <- function(x) {
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- sub(" ", "", x)
x <- sub("\\.\\.+", ".", x)
x <- sub("*\\*+", NA, x)
grepl("\\<[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\>", as.character(x), ignore.case=TRUE)
return(x)
}
# Email format cleaning post EDA (Exploratory Data Analysis) for data format anomalies
valid_emails <- as.data.frame(isValidEmail(df$comlink_address))
library(tidyverse)
library(tm)
# Set working directory - add project folder
setwd("~/Documents/Github/anewhope")
# Import initial dataset
df <- read.csv("anh_environs.csv", stringsAsFactors = FALSE)
df$Phase <- factor(df$Phase, levels = seq(max(df$Phase), min(df$Phase), by = -1))
str(df)
# Identify anomalous email addresses
clean_emails <- function(x) {
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- sub(" ", "", x)
x <- sub("\\.\\.+", ".", x)
x <- sub("*\\*+", NA, x)
return(x)
}
isValidEmail <- function(x) {
grepl("\\<[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\>", as.character(x), ignore.case=TRUE)
}
# Email format cleaning post EDA (Exploratory Data Analysis) for data format anomalies
df['comlink_address'] <- as.data.frame(lapply(df$comlink_address, clean_emails))
df <- read.csv("anh_environs.csv", stringsAsFactors = FALSE)
df$Phase <- factor(df$Phase, levels = seq(max(df$Phase), min(df$Phase), by = -1))
str(df)
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
check_emails <- as.data.frame(lapply(df$comlink_address, isValidEmail))
View(valid_emails)
check_emails <- lapply(df$comlink_address, isValidEmail))
check_emails <- lapply(df$comlink_address, isValidEmail)
View(check_emails)
isValidEmail2 <- function(x) {
grepl("^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z{2,}\\>", as.character(x), ignore.case = TRUE)
}
check_emails2 <- lapply(df$comlink_address, isValidEmail2)
isValidEmail2 <- function(x) {
grepl("^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>", as.character(x), ignore.case = TRUE)
}
check_emails2 <- lapply(df$comlink_address, isValidEmail2)
View(check_emails2)
df <- read.csv("anh_environs.csv", stringsAsFactors = FALSE)
df$Phase <- factor(df$Phase, levels = seq(max(df$Phase), min(df$Phase), by = -1))
str(df)
# Identify anomalous email addresses
clean_emails <- function(x) {
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- sub(" ", "", x)
x <- sub("\\.\\.+", ".", x)
x <- sub("*\\*+", NA, x)
x <- sub("^\\.", "", x)
x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
return(x)
}
isValidEmail <- function(x) {
grepl("\\<[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\>", as.character(x), ignore.case=TRUE)
}
isValidEmail2 <- function(x) {
grepl("^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>", as.character(x), ignore.case = TRUE)
}
# Email format cleaning post EDA (Exploratory Data Analysis) for data format anomalies
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
View(df)
# Identify anomalous email addresses
clean_emails <- function(x) {
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- sub(c(" ", "^\\.", "\\.$"), "", x)
x <- sub("\\.\\.+", ".", x)
x <- sub("*\\*+", NA, x)
#    x <- sub("^\\.", "", x)
#    x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
return(x)
}
# Import initial dataset
df <- read.csv("anh_environs.csv", stringsAsFactors = FALSE)
isValidEmail <- function(x) {
grepl("\\<[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\>", as.character(x), ignore.case=TRUE)
}
isValidEmail2 <- function(x) {
grepl("^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>", as.character(x), ignore.case = TRUE)
}
check_emails2 <- lapply(df$comlink_address, isValidEmail2)
View(check_emails2)
View(check_emails)
isValidEmail <- function(x) {
grepl("\\<[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\>", as.character(x), ignore.case=TRUE)
}
isValidEmail2 <- function(x) {
grepl("^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>", as.character(x), ignore.case = TRUE)
}
check_emails <- lapply(df$comlink_address, isValidEmail)
check_emails2 <- lapply(df$comlink_address, isValidEmail2)
View(check_emails)
View(check_emails2)
View(df)
check_emails <- lapply(df$comlink_address, isValidEmail)
View(check_emails)
View(check_emails2)
isValidEmail2 <- function(x) {
grepl("^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>$", as.character(x), ignore.case = TRUE)
}
check_emails2 <- lapply(df$comlink_address, isValidEmail2)
View(check_emails2)
clean_emails <- function(x) {
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- sub(c(" ", "^\\.", "\\.$"), "", x)
x <- sub("\\.\\.+", ".", x)
x <- sub("*\\*+", NA, x)
#    x <- sub("^\\.", "", x)
#    x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
return(x)
}
# Email format cleaning post EDA (Exploratory Data Analysis) for data format anomalies
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
warnings()
# Identify anomalous email addresses
clean_emails <- function(x) {
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- sub(" ", "", x)
x <- sub("\\.\\.+", ".", x)
x <- sub("*\\*+", NA, x)
x <- sub("^\\.", "", x)
x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
return(x)
}
df <- read.csv("anh_environs.csv", stringsAsFactors = FALSE)
df$Phase <- factor(df$Phase, levels = seq(max(df$Phase), min(df$Phase), by = -1))
str(df)
# Identify anomalous email addresses
clean_emails <- function(x) {
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- sub(" ", "", x)
x <- sub("\\.\\.+", ".", x)
x <- sub("*\\*+", NA, x)
x <- sub("^\\.", "", x)
x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
return(x)
}
isValidEmail <- function(x) {
grepl("^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>$", as.character(x), ignore.case = TRUE)
}
# Email format cleaning post EDA (Exploratory Data Analysis) for data format anomalies
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
check_emails <- lapply(df$comlink_address, isValidEmail)
View(check_emails)
library(tidyverse)
library(tm)
# Set working directory - add project folder
setwd("~/Documents/Github/anewhope")
# Import initial dataset
df <- read.csv("anh_environs.csv", stringsAsFactors = FALSE)
df$Phase <- factor(df$Phase, levels = seq(max(df$Phase), min(df$Phase), by = -1))
str(df)
# Identify anomalous email addresses
clean_emails <- function(x) {
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- sub(" ", "", x)
x <- sub("\\.\\.+", ".", x)
x <- sub("*\\*+", NA, x)
x <- sub("^\\.", "", x)
x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
return(x)
}
# Validate emails following clean
isValidEmail <- function(x) {
grepl("^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>$", as.character(x), ignore.case = TRUE)
}
valid_emails <- lapply(df$comlink_address, isValidEmail)
View(valid_emails)
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
valid_emails <- lapply(df$comlink_address, isValidEmail)
View(valid_emails)
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
valid_emails <- lapply(df$comlink_address, isValidEmail)
View(valid_emails)
invalid_emails <- subset(df, grepl("!(^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>$)", comlink_address))
View(invalid_emails)
invalid_emails <- subset(df, grepl("!^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>$", comlink_address))
View(invalid_emails)
invalid_emails <- subset(df, !grepl("^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>$", comlink_address))
View(invalid_emails)
email_pattern <- "^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>$"
isValidEmail <- function(x) {
grepl(email_pattern, as.character(x), ignore.case = TRUE)
}
check_emails <- lapply(df$comlink_address, isValidEmail)
View(check_emails)
invalid_emails <- subset(df, !grepl(email_pattern, comlink_address))
View(invalid_emails)
# Import initial dataset
df <- read.csv("anh_environs.csv", stringsAsFactors = FALSE)
df$Phase <- factor(df$Phase, levels = seq(max(df$Phase), min(df$Phase), by = -1))
str(df)
# Identify anomalous email addresses
clean_emails <- function(x) {
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- sub(" ", "", x)
x <- sub("\\.\\.+", ".", x)
x <- sub("*\\*+", NA, x)
x <- sub("^\\.", "", x)
x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
return(x)
}
# Validate emails following clean
email_pattern <- "^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>$"
isValidEmail <- function(x) {
grepl(email_pattern, as.character(x), ignore.case = TRUE)
}
check_emails <- lapply(df$comlink_address, isValidEmail)
invalid_emails <- subset(df, !grepl(email_pattern, comlink_address))
View(invalid_emails)
df <- read.csv("anh_environs.csv", stringsAsFactors = FALSE)
df$Phase <- factor(df$Phase, levels = seq(max(df$Phase), min(df$Phase), by = -1))
df$comlink_address <- sapply(df$comlink_address, sub("[[:space:]]", ""))
df$comlink_address <- sapply(df$comlink_address, sub("[[:space:]]", "", comlink_address))
df$comlink_address <- sapply(df$comlink_address, sub("[[:space:]]", "", df$comlink_address))
df$comlink_address <- sub("[[:space:]]", "", df$comlink_address)
View(df)
# Identify anomalous email addresses
clean_emails <- function(x) {
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- sub("[[:space:]]", "", x)
x <- sub("\\.\\.+", ".", x)
x <- sub("*\\*+", NA, x)
x <- sub("^\\.", "", x)
x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
return(x)
}
# Validate emails following clean
email_pattern <- "^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>$"
isValidEmail <- function(x) {
grepl(email_pattern, as.character(x), ignore.case = TRUE)
}
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
check_emails <- lapply(df$comlink_address, isValidEmail)
invalid_emails <- subset(df, !grepl(email_pattern, comlink_address))
View(check_emails)
View(invalid_emails)
([A-Za-z0-9.-]+\.)?
# Validate emails following clean
email_pattern <- "^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\>$"
isValidEmail <- function(x) {
grepl(email_pattern, as.character(x), ignore.case = TRUE)
}
isValidEmail("thisis.atest@this.is.a.test"
)
isValidEmail("thisis.atest@this.is.a.test")
isValidEmail("thisis.atest@this..is.a.test")
isValidEmail("thisis.atest@this..is. a.test")
isValidEmail("thisis.atest@this.is. a..test")
isValidEmail("thisis.atest@this.is.a..test")
email_pattern <- "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$"
isValidEmail("thisis.atest@this.is.a..test")
isValidEmail("thisis.atest@this.is. a..test")
email_pattern <- "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\[^.]([\.])[^.][A-Za-z]{2,}$"
email_pattern <- "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[^.]([\.])[^.][A-Za-z]{2,}$"
email_pattern <- "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail("thisis.atest@this.is. a..test")
isValidEmail("thisis.atest@this.is.a..test")
isValidEmail("thisis.atest@this.is.a.test")
isValidEmail("thisis.atest@this..is.a.test")
email_pattern <- "^[A-Za-z0-9._%+-]+@([^.]([\\.])[^.])?[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail("thisis.atest@this..is.a.test")
isValidEmail("thisis.atest@this.is..a.test")
isValidEmail("thisis.atest@this.is..a..test")
email_pattern <- "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail("thisis.atest@this..is.a.test")
isValidEmail("thisis.atest@ta..test")
isValidEmail("thisis..atest@ta..test")
isValidEmail("thisis.atest@ta..test")
email_pattern <- "^\\<[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail("thisis.atest@ta..test")
email_pattern <- "^\\<[A-Za-z0-9._%+-]+([^.]([\\.])[^.][A-Za-z])?@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail("thisis.atest@ta..test")
email_pattern <- "^\\<([A-Za-z0-9.-]+[^.]([\\.])[^.])?[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail("thisis.atest@ta..test")
email_pattern <- "^\\<([A-Za-z0-9.-]+@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
emp <- "^\\<[[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]@([^.]([\\.])[^.])?[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}\\>$"
isValidEmail <- function(x) {
grepl(emp, as.character(x), ignore.case = TRUE)
}
isValidEmail("thisis.atest@ta..test")
isValidEmail("thisis.atest@this..is.a.test")
isValidEmail("thisis.atest@this.is.atest")
isValidEmail("thisis.atest@this.is.com")
isValidEmail("thisis.atest@is.com")
isValidEmail("thisisatest@is.com")
emp <- "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])"
isValidEmail <- function(x) {
grepl(emp, as.character(x), ignore.case = TRUE)
}
emp <- "(?[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\\"(?[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])"
emp <- "^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$"
emp <- "^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$"
isValidEmail("thisis.atest@is.com")
isValidEmail("thisis.atest@this.is.com")
isValidEmail("thisis.atest@this.com")
emp <- "^([[:alnum:]].-+)@([[:alnum:]].-+)+[^.]([\\.])[^.][[:alpha:]]{2,}$"
isValidEmail("thisis.atest@this.com")
emp <- "^([[:alnum:]].+)@([[:alnum:]].+).+[^\\.]([\\.])[^\\.][[:alpha:]]{2,}$"
isValidEmail("thisis.atest@this.com")
isValidEmail("this.is.atest@this.com")
isValidEmail("this.is.atest@this.is.com")
isValidEmail("this.is.atest@this.is. com")
emp <- "^([[:alnum:]].+)@([[:alnum:]].+).+[^.]([\\.])[^.][[:alpha:]]{2,}$"
isValidEmail("this.is.atest@this.is. com")
isValidEmail("this.is.atest@this.is.. com")
isValidEmail("this.is.atest@this.is..com")
email_pattern <- "^\\<[A-Za-z0-9.-]+@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail <- function(x) {
grepl(email_pattern, as.character(x), ignore.case = TRUE)
}
isValidEmail("this.is.atest@this.is.. com")
isValidEmail("this.is.atest@this.is.com")
isValidEmail("this.is.atest@this.iscom")
isValidEmail("this.isatest@this.iscom")
isValidEmail("this.is atest@this.iscom")
isValidEmail("this..isatest@this.iscom")
email_pattern <- "^\\<[^.]([\\.])[^.][A-Za-z0-9.-]+@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail("this..isatest@this.iscom")
isValidEmail("this.is atest@this.iscom")
isValidEmail("this.isatest@this.iscom")
isValidEmail("thisisatest@this.iscom")
email_pattern <- "^\\<[A-Za-z0-9.-]+@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail <- function(x) {
grepl(email_pattern, as.character(x), ignore.case = TRUE)
}
isValidEmail("thisisatest@this.iscom")
isValidEmail("this.isatest@this.iscom")
isValidEmail("this.is atest@this.iscom")
isValidEmail("this.isatest@this..iscom")
isValidEmail("this..isatest@this.iscom")
email_pattern <- "^\\<([A-Za-z0-9.-]+[^.]([\\.])[^.])?[A-Za-z0-9.-]+@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail("this..isatest@this.iscom")
isValidEmail("this.isatest@this..iscom")
email_pattern <- "^\\<[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z0-9.-]+@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail("this.isatest@this..iscom")
isValidEmail("this..isatest@this.iscom")
isValidEmail("this.is atest@this.iscom")
isValidEmail("this.isatest@this.iscom")
isValidEmail("this.isatest@this. iscom")
library(tidyverse)
library(tm)
# Set working directory - add project folder
setwd("~/Documents/Github/anewhope")
# Import initial dataset
df <- read.csv("anh_environs.csv", stringsAsFactors = FALSE)
df$Phase <- factor(df$Phase, levels = seq(max(df$Phase), min(df$Phase), by = -1))
str(df)
View(df)
# Identify anomalous email addresses
clean_emails <- function(x) {
library(stringr)
# Common email anomalies
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- str_replace_all(x, space(), "")
x <- sub("\\.\\.+", ".", x)
x <- sub("^\\.", "", x)
x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
# substitute email address with invalid characters with NA
x <- sub("*\\*+", NA, x)
return(x)
}
# Validate emails following clean
email_pattern <- "^\\<[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z0-9.-]+@[A-Za-z0-9.-]+[^.]([\\.])[^.][A-Za-z]{2,}$"
isValidEmail <- function(x) {
grepl(email_pattern, as.character(x), ignore.case = TRUE)
}
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
library(stringr)
# Identify anomalous email addresses
clean_emails <- function(x) {
# Common email anomalies
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- str_replace_all(x, space(), "")
x <- sub("\\.\\.+", ".", x)
x <- sub("^\\.", "", x)
x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
# substitute email address with invalid characters with NA
x <- sub("*\\*+", NA, x)
return(x)
}
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
# Identify anomalous email addresses
clean_emails <- function(x) {
# Common email anomalies
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- lapply(x, str_replace_all(space(), ""))
x <- sub("\\.\\.+", ".", x)
x <- sub("^\\.", "", x)
x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
# substitute email address with invalid characters with NA
x <- sub("*\\*+", NA, x)
return(x)
}
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
# Identify anomalous email addresses
clean_emails <- function(x) {
# Common email anomalies
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- lapply(x, str_replace_all(space, ""))
x <- sub("\\.\\.+", ".", x)
x <- sub("^\\.", "", x)
x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
# substitute email address with invalid characters with NA
x <- sub("*\\*+", NA, x)
return(x)
}
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
clean_emails <- function(x) {
# Common email anomalies
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- lapply(x, str_replace_all(space(), ""))
x <- sub("\\.\\.+", ".", x)
x <- sub("^\\.", "", x)
x <- sub("\\.$", "", x)
x <- sub("@-", "@", x)
# substitute email address with invalid characters with NA
x <- sub("*\\*+", NA, x)
return(x)
}
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
clean_emails <- function(x) {
# Common email anomalies
x <- as.character(x)
x <- lapply(x, tolower)
x <- lapply(x, trimws)
x <- lapply(x, stripWhitespace)
x <- lapply(x, sub("[[:space:]]", ""))
x <- lapply(x, sub("\\.\\.+", "."))
x <- lapply(x, sub("^\\.", ""))
x <- lapply(x, sub("\\.$", ""))
x <- lapply(x, sub("@-", "@"))
# substitute email address with invalid characters with NA
x <- lapply(x, sub("*\\*+", NA))
return(x)
}
df['comlink_address'] <- as.data.frame(sapply(df$comlink_address, clean_emails))
